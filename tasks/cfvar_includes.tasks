---
## COMMON
- shell: echo $TYPE-$INSTANCE
  register: NAME
  only_if: is_unset('${NAME.stdout}') and is_set('$INSTANCE')
- shell: echo $TYPE
  register: NAME
  only_if: is_unset('${NAME.stdout}') and is_set('$TYPE')
#- shell: echo ${ ${CLASS}_DIR }/${NAME.stdout}
#  register: DIR
#  only_if: is_unset('$DIR') and is_set('$CLASS')
- shell: echo $ETCS_DIR/${NAME.stdout}
  register: ETC
  only_if: is_unset('$ETC')
- shell: echo $VARS_DIR/lib/${NAME.stdout}
  register: VAR
  only_if: is_unset('$VAR')
- shell: echo $VARS_DIR/log/${NAME.stdout}
  register: LOG
  only_if: is_unset('$LOG')
## STOCK BASE DIRECTORIES ##
# BASE
- file: path=${DIR.stdout} state=directory mode=770
  only_if: is_unset("$DIR_BYPASS")
# ETC
- file: path=${ETC.stdout} state=directory mode=770
  only_if: is_set("$ETC_DIRS") or is_set("$ETC_FILES") and is_unset("$ETC_BYPASS")
- file: src=${ETC.stdout} dest=${DIR.stdout}/etc state=link
  only_if: is_set("$ETC_DIRS") or is_set("$ETC_FILES") and is_unset("$ETC_BYPASS")
# VAR
- file: path=${VAR.stdout} state=directory mode=770
  only_if: is_set("$VAR_DIRS") or is_set("$VAR_FILES") and is_unset("$VAR_BYPASS")
- file: src=${VAR.stdout} dest=${DIR.stdout}/var state=link
  only_if: is_set("$VAR_DIRS") or is_set("$VAR_FILES") and is_unset("$VAR_BYPASS")
# LOG
- debug: msg="LOG ${LOG.stdout}"
- file: path=${LOG.stdout} state=directory mode=770
  only_if: is_set("$LOG_DIRS") or is_set("$LOG_FILES") and is_unset("$LOG_BYPASS")
- file: src=${LOG.stdout} dest=${DIR.stdout}/log state=link
  only_if: is_set("$LOG_DIRS") or is_set("$LOG_FILES") and is_unset("$LOG_BYPASS")
## SERVICE DEFINED ##
# DIRS aka DIR_DIRS
- file: path=${DIR.stdout}/${item} state=directory mode=770
  with_items: $DIRS
  only_if: is_set("$DIRS")
- file: path=${DIR.stdout}/${item} state=directory mode=770
  with_items: $DIR_DIRS
  only_if: is_set("$DIR_DIRS")
# FILES aka DIR_FILES
- template: src=files/${TYPE}/${item} dest=${DIR.stdout}/${item} mode=660
  with_items: $FILES
  only_if: is_set("$FILES")
- template: src=files/${TYPE}/${item} dest=${DIR.stdout}/${item} mode=660
  with_items: $DIR_FILES
  only_if: is_set("$DIR_FILES")
# ETC_DIRS
- file: path=${ETC.stdout}/${item} state=directory mode=770
  with_items: $ETC_DIRS
  only_if: is_set("$ETC_DIRS")
# ETC_FILES
- template: src=files/${TYPE}/${item} dest=${ETC.stdout}/${item} mode=660
  with_items: $ETC_FILES
  only_if: is_set("$ETC_FILES")
# VAR_DIRS
- file: path=${VAR.stdout}/${item} state=directory mode=770
  with_items: $VAR_DIRS
  only_if: is_set("$VAR_DIRS")
# VAR_FILES
- template: src=files/${TYPE}/${item} dest=${VAR.stdout}/${item} mode=660
  with_items: $VAR_FILES
  only_if: is_set("$VAR_FILES")
# LINKS
- file: src=${DIR.stdout}/${LINKS.${item}} dest=${DIR.stdout}/${item} state=link
  with_items: $LINKS
  only_if: is_set("$LINKS")
- debug: msg="done with cfvars_include"
